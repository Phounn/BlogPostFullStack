@using Share
@using Share.Models
<MudDialog>
    <TitleContent>
        Create Blog
    </TitleContent>
    <DialogContent>
        <MudPaper Elevation="0" Style="max-width:100rem">

            @if (string.IsNullOrEmpty(BlogPostModel!.S3Cover))
            {
                <InputFile OnChange="async(e) => {await HandleUploadImage(e);}"></InputFile>
            }
            else
            {
                <MudImage Height="200" Src="@BlogPostModel!.S3Cover"></MudImage>
            }

            <MudTextField @bind-Value="BlogPostModel!.Title" Label="Title"></MudTextField>
            <MudSelect @bind-Value="BlogPostModel.Category">
                @if (BlogPostModel.Categories is not null)
                {
                    @foreach (var e in BlogPostModel.Categories!)
                    {
                        <MudSelectItem Value="@e">@e</MudSelectItem>
                    }
                }
            </MudSelect>
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    [Parameter] public BlogPost? BlogPostModel { get; set; }
    private string categoryTxt { get; set; } = string.Empty;
    private async Task HandleUploadImage(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var content = await Helper.HandleImage(file);
        BlogPostModel!.S3Cover = content;
    }
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();
    private void HandleEnter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter")
        {
            BlogPostModel!.Categories!.Add(categoryTxt);
        }
        categoryTxt = string.Empty;

    }
}

